---
name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  vars:
    name: Set Variables
    outputs:
      pr: ${{ steps.pr.outputs.pr }}
      release-name: ${{ steps.release-name.outputs.release-name }}
      release-num: ${{ steps.release-name.outputs.release-num }}
    runs-on: ubuntu-22.04
    timeout-minutes: 1
    steps:
      # Get PR number for squash merges to main
      - name: Get PR Number From Event
        if: github.event_name == 'release'
        id: pr_no
        uses: bcgov/action-get-pr@main
      - name: PR Number
        id: pr
        run: echo pr=${{ steps.pr_no.outputs.pr || inputs.pr}} >> $GITHUB_OUTPUT
      - name: Release Name
        id: release-name
        run: |
          echo release-name=$(curl https://api.github.com/repos/bcgov/onroutebc/releases/latest | jq -r .tag_name) >> $GITHUB_OUTPUT
          echo release-num=V$(curl https://api.github.com/repos/bcgov/onroutebc/releases/latest | jq -r .tag_name | sed 's/[^0-9.]//g')  >> $GITHUB_OUTPUT
  promote-images-release:
    name: Promote Images - Release
    needs: [vars]
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [dops, vehicles, frontend, scheduler, policy, public]
    timeout-minutes: 2
    steps:
      - uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.package }}
          target: ${{ needs.vars.outputs.pr }}
          tags: ${{ needs.vars.outputs.release-name }}

  deploys-uat-silver:
    name: Deploys UAT (Silver)
    needs: [vars,promote-images-release]
    uses: ./.github/workflows/silver-uat.yml
    secrets: inherit
    with:
      tag: ${{ needs.vars.outputs.pr }}
      params: |
        --set-string global.env.pr_num='${{ needs.vars.outputs.pr }}' \
        --set-string global.env.release_num='${{ needs.vars.outputs.release-num }}' \
  
  deploys-uat-gold:
    name: Deploys UAT (Gold)
    needs: [vars,promote-images-release]
    uses: ./.github/workflows/gold-uat.yml
    secrets: inherit
    with:
      tag: ${{ needs.vars.outputs.pr }}
      params: |
        --set-string global.env.pr_num='${{ needs.vars.outputs.pr }}' \
        --set-string global.env.release_num='${{ needs.vars.outputs.release-num }}' \
        
  promote-images-uat:
    name: Promote Images - Uat
    needs: [vars,deploys-uat-silver,deploys-uat-gold]
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [dops, vehicles, frontend, scheduler, policy, public]
    timeout-minutes: 2
    steps:
      - uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.package }}
          target: ${{ needs.vars.outputs.pr }}
          tags: uat
  
  deploys-prod-silver:
    name: Deploys Prod (Silver)
    needs: [vars,promote-images-uat]
    uses: ./.github/workflows/silver-prod.yml
    secrets: inherit
    with:
      tag: ${{ needs.vars.outputs.pr }}
      params: |
        --set-string global.env.pr_num='${{ needs.vars.outputs.pr }}' \
        --set-string global.env.release_num='${{ needs.vars.outputs.release-num }}' \
  
  deploys-prod-gold:
    name: Deploys Prod (Gold)
    needs: [vars,promote-images-uat]
    uses: ./.github/workflows/gold-prod.yml
    secrets: inherit
    with:
      tag: ${{ needs.vars.outputs.pr }}
      params: |
        --set-string global.env.pr_num='${{ needs.vars.outputs.pr }}' \
        --set-string global.env.release_num='${{ needs.vars.outputs.release-num }}' \
  
  promote-images-prod:
    name: Promote Images - Prod
    needs: [vars,deploys-prod-silver,deploys-prod-gold]
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [dops, vehicles, frontend, scheduler, policy, public]
    timeout-minutes: 2
    steps:
      - uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.package }}
          target: ${{ needs.vars.outputs.pr }}
          tags: prod
