<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Duration" elementType="Argument">
            <stringProp name="Argument.name">Duration</stringProp>
            <stringProp name="Argument.value">3180</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Accept-Language" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
          </elementProp>
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
          </elementProp>
          <elementProp name="Keep-Alive" elementType="Header">
            <stringProp name="Header.name">Keep-Alive</stringProp>
            <stringProp name="Header.value">115</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13</stringProp>
          </elementProp>
          <elementProp name="Accept-Encoding" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip,deflate</stringProp>
          </elementProp>
          <elementProp name="Accept-Charset" elementType="Header">
            <stringProp name="Header.name">Accept-Charset</stringProp>
            <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">X-BlazeMeter-Session</stringProp>
            <stringProp name="Header.value">${__P(blazemeter.session_id)}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">2</intProp>
        <stringProp name="HTTPSampler.embedded_url_re">^((?!google|facebook|youtube|pinterest|twimg|doubleclick).)*$</stringProp>
        <intProp name="HTTPSampler.connect_timeout">60000</intProp>
        <intProp name="HTTPSampler.response_timeout">120000</intProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="NUM_THREADS" elementType="Argument">
            <stringProp name="Argument.name">NUM_THREADS</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FRONTEND_API_URL" elementType="Argument">
            <stringProp name="Argument.name">FRONTEND_API_URL</stringProp>
            <stringProp name="Argument.value">onroutebc-uat-frontend.apps.silver.devops.gov.bc.ca</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="VEHICLES_API_URL" elementType="Argument">
            <stringProp name="Argument.name">VEHICLES_API_URL</stringProp>
            <stringProp name="Argument.value">onroutebc-uat-vehicles.apps.silver.devops.gov.bc.ca</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DOPS_API_URL" elementType="Argument">
            <stringProp name="Argument.name">DOPS_API_URL</stringProp>
            <stringProp name="Argument.value">onroutebc-uat-dops.apps.silver.devops.gov.bc.ca</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RESULTS_DIR" elementType="Argument">
            <stringProp name="Argument.name">RESULTS_DIR</stringProp>
            <stringProp name="Argument.value">~/results</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="IDIR_BEARER_TOKEN" elementType="Argument">
            <stringProp name="Argument.name">IDIR_BEARER_TOKEN</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COMPANY_ID" elementType="Argument">
            <stringProp name="Argument.name">COMPANY_ID</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="IDIR ppc create and download pdf - dops" enabled="true">
        <stringProp name="ThreadGroup.num_threads">${NUM_THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(rampup,0)}</stringProp>
        <stringProp name="ThreadGroup.duration">${__P(duration,3000)}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${IDIR_BEARER_TOKEN}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">*/*</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ppcSearch" enabled="true">
          <stringProp name="HTTPSampler.path">https://${VEHICLES_API_URL}/permits?searchColumn=permitNumber&amp;searchString=1&amp;page=1&amp;take=10</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="BlazeMeter Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${VEHICLES_API_URL}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${IDIR_BEARER_TOKEN}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://${FRONTEND_API_URL}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://${FRONTEND_API_URL}/</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-None-Match</stringProp>
                <stringProp name="Header.value">W/&quot;17b2-OQs45yY+9rxT8oaE549bg+d9IqA&quot;</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${IDIR_BEARER_TOKEN}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ppcDgenGetDocument" enabled="true">
          <stringProp name="HTTPSampler.path">https://${DOPS_API_URL}/dms/1?download=url&amp;companyId=${COMPANY_ID}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="BlazeMeter Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${VEHICLES_API_URL}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${IDIR_BEARER_TOKEN}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://${FRONTEND_API_URL}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://${FRONTEND_API_URL}/</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-None-Match</stringProp>
                <stringProp name="Header.value">W/&quot;17b2-OQs45yY+9rxT8oaE549bg+d9IqA&quot;</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${IDIR_BEARER_TOKEN}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ppcDgenReportRender" enabled="true">
          <stringProp name="HTTPSampler.path">https://${DOPS_API_URL}/dgen/report/render</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;reportTemplate&quot;: &quot;PAYMENT_AND_REFUND_DETAILED_REPORT&quot;,&#xd;
  &quot;reportData&quot;: {&#xd;
    &quot;issuedBy&quot;: &quot;Self Issued and PPC&quot;,&#xd;
    &quot;runDate&quot;: &quot;Jul. 17, 2023, 09:00 PM, PDT&quot;,&#xd;
    &quot;permitType&quot;: &quot;All Permit Types&quot;,&#xd;
    &quot;paymentMethod&quot;: &quot;Cash, Cheque, Icepay - Mastercard, Icepay - Mastercard (Debit), Icepay - Visa, Icepay - Visa (Debit), Web - Mastercard (Debit), Web - Visa (Debit), PoS - Mastercard (Debit), PoS - Visa (Debit), PoS - Mastercard&quot;,&#xd;
    &quot;timePeriod&quot;: &quot;Jul. 17, 2023, 09:00 PM, PDT – Jul. 18, 2023, 09:00 PM, PDT&quot;,&#xd;
    &quot;payments&quot;: [&#xd;
      {&#xd;
        &quot;issuedOn&quot;: &quot;2023-11-11T23:26:51.170Z&quot;,&#xd;
        &quot;providerTransactionId&quot;: &quot;73582422238&quot;,&#xd;
        &quot;orbcTransactionId&quot;: &quot;OR-678904512857&quot;,&#xd;
        &quot;paymentMethod&quot;: &quot;Cash&quot;,&#xd;
        &quot;receiptNo&quot;: &quot;45098721098&quot;,&#xd;
        &quot;permitNo&quot;: &quot;P2-72106199-468&quot;,&#xd;
        &quot;permitType&quot;: &quot;STOS&quot;,&#xd;
        &quot;users&quot;: &quot;ANPETRIC&quot;,&#xd;
        &quot;amount&quot;: &quot;90.00&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;refunds&quot;: [&#xd;
      {&#xd;
        &quot;issuedOn&quot;: &quot;2023-11-11T23:26:51.170Z&quot;,&#xd;
        &quot;providerTransactionId&quot;: &quot;73582422238&quot;,&#xd;
        &quot;orbcTransactionId&quot;: &quot;OR-678904512857&quot;,&#xd;
        &quot;paymentMethod&quot;: &quot;Cheque&quot;,&#xd;
        &quot;receiptNo&quot;: &quot;51961102630&quot;,&#xd;
        &quot;permitNo&quot;: &quot;P2-15348742-610&quot;,&#xd;
        &quot;permitType&quot;: &quot;TROS&quot;,&#xd;
        &quot;users&quot;: &quot;KOPARKIN&quot;,&#xd;
        &quot;amount&quot;: &quot;10.00&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;summaryPaymentsAndRefunds&quot;: [&#xd;
      {&#xd;
        &quot;paymentMethod&quot;: &quot;Cash&quot;,&#xd;
        &quot;payment&quot;: &quot;90.00&quot;,&#xd;
        &quot;refund&quot;: null,&#xd;
        &quot;deposit&quot;: &quot;90.00&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;paymentMethod&quot;: &quot;Cheque&quot;,&#xd;
        &quot;payment&quot;: null,&#xd;
        &quot;refund&quot;: &quot;10.00&quot;,&#xd;
        &quot;deposit&quot;: &quot;90.00&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;paymentMethod&quot;: &quot;totalAmount&quot;,&#xd;
        &quot;payment&quot;: &quot;90.00&quot;,&#xd;
        &quot;refund&quot;: &quot;10.00&quot;,&#xd;
        &quot;deposit&quot;: &quot;80.00&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;summaryPermits&quot;: [&#xd;
      {&#xd;
        &quot;permitType&quot;: &quot;STOS&quot;,&#xd;
        &quot;permitCount&quot;: &quot;1&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;permitType&quot;: &quot;TROS&quot;,&#xd;
        &quot;permitCount&quot;: &quot;1&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;permitType&quot;: &quot;totalPermitCount&quot;,&#xd;
        &quot;permitCount&quot;: &quot;2&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  &quot;generatedDocumentFileName&quot;: &quot;Financial-A-2-3-4-5&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ppcDgenTemplateRender" enabled="true">
          <stringProp name="HTTPSampler.path">https://${DOPS_API_URL}/dgen/template/render?companyId=${COMPANY_ID}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;templateName&quot;: &quot;PERMIT&quot;,&#xd;
  &quot;templateVersion&quot;: 1,&#xd;
  &quot;templateData&quot;: {&#xd;
    &quot;permitName&quot;: &quot;Oversize: Term&quot;,&#xd;
    &quot;permitNumber&quot;: &quot;P9-00010001-354&quot;,&#xd;
    &quot;permitType&quot;: &quot;TROS&quot;,&#xd;
    &quot;createdDateTime&quot;: &quot;Jul. 7, 2023, 08:26 am&quot;,&#xd;
    &quot;updatedDateTime&quot;: &quot;Jul. 7, 2023, 08:26 am&quot;,&#xd;
    &quot;companyName&quot;: &quot;Parisian LLC Trucking&quot;,&#xd;
    &quot;clientNumber&quot;: &quot;B3-000005-722&quot;,&#xd;
    &quot;revisions&quot;: [&#xd;
      {&#xd;
        &quot;timeStamp&quot;: &quot;&quot;,&#xd;
        &quot;description&quot;: &quot;N/A&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;permitData&quot;: {&#xd;
      &quot;startDate&quot;: &quot;Jun. 5, 2023&quot;,&#xd;
      &quot;expiryDate&quot;: &quot;Jul. 4, 2023&quot;,&#xd;
      &quot;permitDuration&quot;: 30,&#xd;
      &quot;feeSummary&quot;: &quot;30&quot;,&#xd;
      &quot;commodities&quot;: [&#xd;
        {&#xd;
          &quot;description&quot;: &quot;General Permit Conditions&quot;,&#xd;
          &quot;condition&quot;: &quot;CVSE-1000&quot;,&#xd;
          &quot;conditionLink&quot;: &quot;https://www.th.gov.bc.ca/forms/getForm.aspx?formId=1251&quot;,&#xd;
          &quot;checked&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;description&quot;: &quot;Permit Scope and Limitation&quot;,&#xd;
          &quot;condition&quot;: &quot;CVSE-1070&quot;,&#xd;
          &quot;conditionLink&quot;: &quot;https://www.th.gov.bc.ca/forms/getForm.aspx?formId=1261&quot;,&#xd;
          &quot;checked&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;description&quot;: &quot;Log Permit Conditions&quot;,&#xd;
          &quot;condition&quot;: &quot;CVSE-1000L&quot;,&#xd;
          &quot;conditionLink&quot;: &quot;https://www.th.gov.bc.ca/forms/getForm.aspx?formId=1250&quot;,&#xd;
          &quot;checked&quot;: true&#xd;
        }&#xd;
      ],&#xd;
      &quot;contactDetails&quot;: {&#xd;
        &quot;firstName&quot;: &quot;Lewis&quot;,&#xd;
        &quot;lastName&quot;: &quot;Hamilton&quot;,&#xd;
        &quot;phone1&quot;: &quot;(778) 952-1234&quot;,&#xd;
        &quot;email&quot;: &quot;lewis@f1.com&quot;,&#xd;
        &quot;additionalEmail&quot;: &quot;lewis2@f1.com&quot;,&#xd;
        &quot;phone1Extension&quot;: &quot;1&quot;,&#xd;
        &quot;phone2&quot;: null,&#xd;
        &quot;phone2Extension&quot;: null,&#xd;
        &quot;fax&quot;: null&#xd;
      },&#xd;
      &quot;mailingAddress&quot;: {&#xd;
        &quot;addressLine1&quot;: &quot;123 Short Street&quot;,&#xd;
        &quot;addressLine2&quot;: null,&#xd;
        &quot;city&quot;: &quot;Victoria&quot;,&#xd;
        &quot;provinceCode&quot;: &quot;British Columbia&quot;,&#xd;
        &quot;countryCode&quot;: &quot;Canada&quot;,&#xd;
        &quot;postalCode&quot;: &quot;V8X2V5&quot;&#xd;
      },&#xd;
      &quot;vehicleDetails&quot;: {&#xd;
        &quot;vin&quot;: &quot;781452&quot;,&#xd;
        &quot;plate&quot;: &quot;PRJZZP&quot;,&#xd;
        &quot;make&quot;: &quot;GMC&quot;,&#xd;
        &quot;year&quot;: 2001,&#xd;
        &quot;countryCode&quot;: &quot;Canada&quot;,&#xd;
        &quot;provinceCode&quot;: &quot;British Columbia&quot;,&#xd;
        &quot;vehicleType&quot;: &quot;Power Unit&quot;,&#xd;
        &quot;vehicleSubType&quot;: &quot;Logging Trucks&quot;,&#xd;
        &quot;saveVehicle&quot;: true&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;generatedDocumentFileName&quot;: &quot;permit-A-2-3-4-5&quot;,&#xd;
  &quot;documentsToMerge&quot;: [&#xd;
    &quot;CVSE-1000&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${RESULTS_DIR}/dops.csv</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
