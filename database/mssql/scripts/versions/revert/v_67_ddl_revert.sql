SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET NOCOUNT ON
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO

/*Below delete scripts from ORBC_POWER_UNIT_TYPE and ORBC_TRAILER_TYPE have been commented
 due to FK constraints. Execute them manually if needed. */
/*
DELETE FROM dbo.ORBC_TRAILER_TYPE WHERE TRAILER_TYPE='FECVYRX';
DELETE FROM dbo.ORBC_TRAILER_TYPE WHERE TRAILER_TYPE='STRDLY';
*/

-- Revert trailer types to be active
UPDATE dbo.ORBC_TRAILER_TYPE 
  SET 
    [IS_ACTIVE]=1,
    [TYPE]='Fixed Equipment - Conveyors',
    [DESCRIPTION]='Fixed Equipment - Conveyors',
    DB_LAST_UPDATE_TIMESTAMP = GETUTCDATE(),
    DB_LAST_UPDATE_USERID = CURRENT_USER
  WHERE TRAILER_TYPE='FECVYER';

UPDATE dbo.ORBC_TRAILER_TYPE 
  SET 
    [IS_ACTIVE]=1,
    DB_LAST_UPDATE_TIMESTAMP = GETUTCDATE(),
    DB_LAST_UPDATE_USERID = CURRENT_USER
  WHERE TRAILER_TYPE='FECVYPT';

UPDATE dbo.ORBC_TRAILER_TYPE 
  SET 
    [IS_ACTIVE]=1,
    DB_LAST_UPDATE_TIMESTAMP = GETUTCDATE(),
    DB_LAST_UPDATE_USERID = CURRENT_USER
  WHERE TRAILER_TYPE='SPAUTHV';

-- Revert power unit types to be active
UPDATE dbo.ORBC_POWER_UNIT_TYPE 
  SET 
    [IS_ACTIVE]=1,
    DB_LAST_UPDATE_TIMESTAMP = GETUTCDATE(),
    DB_LAST_UPDATE_USERID = CURRENT_USER
  WHERE POWER_UNIT_TYPE='CRAFTAT';

UPDATE dbo.ORBC_POWER_UNIT_TYPE 
  SET 
    [IS_ACTIVE]=1,
    DB_LAST_UPDATE_TIMESTAMP = GETUTCDATE(),
    DB_LAST_UPDATE_USERID = CURRENT_USER
  WHERE POWER_UNIT_TYPE='CRAFTMB';

UPDATE dbo.ORBC_POWER_UNIT_TYPE 
  SET 
    [IS_ACTIVE]=1,
    DB_LAST_UPDATE_TIMESTAMP = GETUTCDATE(),
    DB_LAST_UPDATE_USERID = CURRENT_USER
  WHERE POWER_UNIT_TYPE='LWBTRCT';

-- Remove the newly added policy configuration
DELETE FROM [dbo].[ORBC_POLICY_CONFIGURATION]
WHERE POLICY_CONFIGURATION_ID = (SELECT MAX(POLICY_CONFIGURATION_ID) FROM [dbo].[ORBC_POLICY_CONFIGURATION])
GO

IF @@ERROR <> 0 SET NOEXEC ON
GO

DECLARE @VersionDescription VARCHAR(255)
SET @VersionDescription = 'Reverting updates to permittable vehicles as per policy review for all permit types'

INSERT [dbo].[ORBC_SYS_VERSION] ([VERSION_ID], [DESCRIPTION], [RELEASE_DATE]) VALUES (66, @VersionDescription, getutcdate())
GO

IF @@ERROR <> 0 SET NOEXEC ON
GO

COMMIT TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database revert succeeded'
ELSE BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   PRINT 'The database revert failed'
END
GO