import { Nullable } from "../../../../common/types/common";
import {
  CONDITIONAL_LICENSING_FEE_TYPES,
  ConditionalLicensingFeeType,
} from "../../types/ConditionalLicensingFee";

/**
 * Gets available conditional licensing fee types for given vehicle subtype.
 * @param vehicleSubtype Given vehicle subtype for the permit
 * @returns Array of available conditional licensing fee types that can be selected
 */
export const getAvailableCLFs = (
  vehicleSubtype?: Nullable<string>,
): ConditionalLicensingFeeType[] => {
  switch (vehicleSubtype) {
    case "BUSCRUM":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "CONCRET":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.INDUSTRIAL_X_PLATE_TYPE_FEE_RATE,
      ];
    case "CRAFTAT":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.INDUSTRIAL_X_PLATE_TYPE_FEE_RATE,
      ];
    case "CRAFTMB":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.INDUSTRIAL_X_PLATE_TYPE_FEE_RATE,
      ];
    case "DDCKBUS":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "GRADERS":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.INDUSTRIAL_X_PLATE_TYPE_FEE_RATE,
      ];
    case "BUSTRLR":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "LOGGING":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "LOGOFFH":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "LCVRMDB":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "LCVTPDB":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "LWBTRCT":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "MUNFITR":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "OGBEDTK":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.INDUSTRIAL_X_PLATE_TYPE_FEE_RATE,
      ];
    case "OGOILSW":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.INDUSTRIAL_X_PLATE_TYPE_FEE_RATE,
      ];
    case "OGSERVC":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.INDUSTRIAL_X_PLATE_TYPE_FEE_RATE,
      ];
    case "OGSRRAH":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.INDUSTRIAL_X_PLATE_TYPE_FEE_RATE,
      ];
    case "PICKRTT":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "SCRAPER":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.INDUSTRIAL_X_PLATE_TYPE_FEE_RATE,
      ];
    case "SPAUTHV":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "PUTAXIS":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "TOWVEHC":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "TRKTRAC":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
        CONDITIONAL_LICENSING_FEE_TYPES.FARM_VEHICLE_FEE_RATE,
      ];
    case "STINGER":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "REGTRCK":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
        CONDITIONAL_LICENSING_FEE_TYPES.FARM_VEHICLE_FEE_RATE,
      ];
    case "PLOWBLD":
      return [
        CONDITIONAL_LICENSING_FEE_TYPES.NONE,
        CONDITIONAL_LICENSING_FEE_TYPES.CONDITIONAL_LICENSING_FEE_RATE,
      ];
    case "FARMTRC":
      return [CONDITIONAL_LICENSING_FEE_TYPES.FARM_TRACTOR_FEE_RATE];
    default:
      return [];
  }
};
